        for plate in results:
            min = sys.maxsize
            num = 0
            coord = plate['coordinates']
            a = coord[0]
            b = coord[2]
            x = a['x']
            x2 = b['x']
            y = a['y']
            y2 = b['y']
            width = x2 - x
            height = y2 - y
            LP = plate['plate']
            # Loops through cars to find nearest neighbor
            for n, car in enumerate(self.car):
                if car.coords[self.counter-1][0] != -1:
                    d = abs(x - car.coords[self.counter-1][0])
                    d += abs(y - car.coords[self.counter-1][1])
                    d = d / 2

                    if d < min:
                        min = d
                        num = n

            print("Min: ", min)
            print("delta_min: ", self.car[num].delta_min)
            print("delta_max: ", self.car[num].delta_max)
            if min > self.car[num].delta_min and min < self.car[num].delta_max:
                self.bbox = (x, y, width, height)
                self.update_car(num, self.bbox, LP)
                return
            else:
                print("different car...")